program Laba2;

{$APPTYPE CONSOLE}

uses
  SysUtils,
  DateUtils;
  procedure readFull(var arr: array of integer; fullmas: textfile);
  var str: string;
  begin
    Assign(fullmas, 'D:\DelphiFiles\fullmas.txt');
    reset(fullmas);
    for i:=0 to 99999 do
    begin
      readln(fullmas, str);
      arr[i] := StrToInt(str);
    end;
  end;
  procedure sort(var ar: array of integer; low, high: integer);
  var i, j: integer;
      m, wsp: integer;
  begin
    repeat
      i:=low; j:=high; m:=ar[(i+j) div 2]; // Âçÿòèå ñðåäíåãî îïîðíîãî ýëåìåíòà
      repeat
        while ar[i]<m do Inc(i);
        while ar[j]>m do Dec(j);
        if i<=j then begin
          wsp:=ar[i]; ar[i]:=ar[j]; ar[j]:=wsp;
          Inc(i); Dec(j);
         end;
      until i>j;
    if (j - low) < (high - i) then begin // Ñðàâíåíèå ðàçìåðîâ âûäåëåííûõ ïîäìàññèâîâ
        if low < j then sort(ar, low, j); // Åñëè ïåðâûé ïîäìàññèâ ìåíüøå - îí ñîðòèðóåòñÿ ðåêóðñèâíî,
        low := i;                          // à äëÿ ñëåäóþùåãî ïðîõîäà öèêëà âûáèðàåòñÿ âòîðîé ïîäìàññèâ.
        end
    else begin // â ïðîòèâíîì ñëó÷àå âñ¸ íàîáîðîò
        if i < high then sort(ar, i, high); // Ðåêóðñèâíî ñîðòèðóåòñÿ âòîðîé ïîäìàññèâ,
        high := j;                           // à â ñëåäóþùåì ïðîõîäå öèêëà - ïåðâûé.
    end;
    until low = high;
  end;
procedure qSort(var ar: array of integer);

begin
  sort(ar, 0, High(ar));
end;
procedure partQSort(var arr: array of integer; fst, last: integer);
var sorted, parSorted: textfile;
    t1, t2: TDateTime;
    str: string;
    i: integer;
begin
  Assign(sorted, 'D:\DelphiFiles\sorted.txt');
  Assign(parSorted, 'D:\DelphiFiles\parSorted.txt');
  sort(arr, fst, last);
  rewrite(parSorted);
  for i:=0 to high(arr) do
  begin
    str := IntToStr(arr[i]);
    writeln(parSorted, str);
  end;
  close(parSorted);
  t1:=Now();
  qSort(arr);
  t2:=Now();
  writeln('Time of sorting = ',MillisecondsBetween(t1,t2));
  rewrite(sorted);
  for i:=0 to high(arr) do
  begin
    str := IntToStr(arr[i]);
    writeln(sorted, str);
  end;
  close(sorted);
end;
var menu, n, i: integer;
    str: string;
    t1, t2 : TDateTime;
    arrN: array of integer;
    arr: array [0..99999] of integer;
    masN, fullmas, sorted, sorted10, sorted100, sortedTh, sortedTen: textfile;
begin
  //SetConsoleCP(1251);
  //SetConsoleOutPutCP(1251);
  Assign(masN, 'D:\DelphiFiles\masN.txt');
  Assign(fullmas, 'D:\DelphiFiles\fullmas.txt');
  Assign(sorted, 'D:\DelphiFiles\sorted.txt');
  Assign(sorted100, 'D:\DelphiFiles\sorted100.txt');
  Assign(sorted10, 'D:\DelphiFiles\sorted10.txt');
  Assign(sortedTh, 'D:\DelphiFiles\sortedTh.txt');
  Assign(sortedTen, 'D:\DelphiFiles\sortedTen.txt');
  randomize;
  writeln('Enter number of elements');
  readln(n);
  SetLength(arrN, n);
  rewrite(masN);
  for i:=0 to high(arrN) do
  begin
    arrN[i] := random(100)+100;
    str := IntToStr(arrN[i]);
    writeln(masN, str);
  end;
  close(masN);
  rewrite(fullmas);
  for i:=0 to 99999 do
  begin
    arr[i] := random(100)+100;
    str := IntToStr(arr[i]);
    writeln(fullmas, str);
  end;
  close(fullmas);
  while true do
  begin
    writeln('1. Quick sort 2. Selection sort 3. Insertion sort 4. Bubble sort');
    readln(menu);
    case menu of
    1: begin
        while true do
        begin
         writeln('1. Sort by part 2. Sort partially sorted 3. Reverse sort  4. Sort N array 5. Back to general menu');
         readln(menu);
         case menu of
          1: begin
              readFull(arr, fullmas);
              qSort(arr);
              rewrite(sorted);
              for i:=0 to high(arr) do
              begin
                str := IntToStr(arr[i]);
                writeln(sorted, str);
              end;
              close(sorted);
              readFull(arr, fullmas);
              for i:=0 to 99999 do
              begin
                if ( i mod 10000 = 0) or ( i =0) then
                  sort(arr, i, i+9999);
              end;
              rewrite(sorted10);
              for i:=0 to high(arr) do
              begin
                str := IntToStr(arr[i]);
                writeln(sorted10, str);
              end;
              close(sorted);
              readFull(arr, fullmas);

          end;
          2: begin
              writeln('Enter "i" and "j" for partial sorting');
              readln(n); readln(i);
              partQSort(arrN, n, i);
          end;
          4: begin
              t1:=Now();
              qSort(arrN);
              t2:=Now();
              writeln('Time of sorting = ',MillisecondsBetween(t1,t2));
              rewrite(sorted);
              for i:=0 to high(arrN) do
              begin
                str := IntToStr(arrN[i]);
                writeln(sorted, str);
              end;
              close(sorted);
             end;
         end;
        end;
       end;
   end;
  end;
end.
